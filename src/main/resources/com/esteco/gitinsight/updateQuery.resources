{
  repository(owner: "@owner-name", name: "@repo-name") {
    id
    url
    updatedAt
    createdAt
    isPrivate
    isLocked
    languages(first: 50) {
      totalCount
      edges {
        node {
          id
          color
          name
        }
      }
    }
    issues(first: 100, after: "@end-cursor", states: CLOSED, orderBy:{direction:ASC, field:UPDATED_AT}) {
      totalCount
      pageInfo {
        hasNextPage
        endCursor
      }
      edges {
        node {
          id
          title
          comments(first: 100, after: "@end-cursor", orderBy:{direction:ASC, field:UPDATED_AT}) {
            edges {
              node {
                id
                author {
                  login
                  url
                }
                body
                createdAt
              }
            }
          }
          url
          body
          closed
          closedAt
          closedByPullRequestsReferences(first: 15, after: "@end-cursor") {
            edges {
              node {
                id
                title
                author {
                  login
                  url
                }
                body
                url
                commits(first: 50, after: "@end-cursor") {
                  edges {
                    node {
                      commit {
                        url
                      }
                      id
                      resourcePath
                    }
                  }
                }
                createdAt
                closed
                closedAt
              }
            }
          }
          createdAt
          labels(first: 15, after: "@end-cursor", orderBy:{direction:ASC, field:CREATED_AT}) {
            edges {
              node {
                id
                color
                name
              }
            }
          }
          author {
            login
            url
          }
          assignees(first: 15, after: "@end-cursor") {
            edges {
              node {
                login
              }
            }
          }
        }
      }
    }
  }
}